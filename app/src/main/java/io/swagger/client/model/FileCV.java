/*
 * JobSearch API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0.4-release
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Employee;
import io.swagger.client.model.EmployeeContacts;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.File;
import java.io.IOException;
/**
 * FileCV
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-08-20T17:46:18.738Z[GMT]")
public class FileCV {
  @SerializedName("skills")
  private String skills = null;

  @SerializedName("relocate")
  private Boolean relocate = null;

  @SerializedName("city")
  private String city = null;

  @SerializedName("degree")
  private String degree = null;

  @SerializedName("workExperience")
  private String workExperience = null;

  @SerializedName("about")
  private String about = null;

  @SerializedName("employeeId")
  private Employee employeeId = null;

  @SerializedName("fileCvId")
  private Long fileCvId = null;

  @SerializedName("remote")
  private Boolean remote = null;

  @SerializedName("interests")
  private String interests = null;

  @SerializedName("contacts")
  private EmployeeContacts contacts = null;

  @SerializedName("cvFile")
  private File cvFile = null;

  public FileCV skills(String skills) {
    this.skills = skills;
    return this;
  }

   /**
   * Get skills
   * @return skills
  **/
  @Schema(description = "")
  public String getSkills() {
    return skills;
  }

  public void setSkills(String skills) {
    this.skills = skills;
  }

  public FileCV relocate(Boolean relocate) {
    this.relocate = relocate;
    return this;
  }

   /**
   * Get relocate
   * @return relocate
  **/
  @Schema(description = "")
  public Boolean isRelocate() {
    return relocate;
  }

  public void setRelocate(Boolean relocate) {
    this.relocate = relocate;
  }

  public FileCV city(String city) {
    this.city = city;
    return this;
  }

   /**
   * Get city
   * @return city
  **/
  @Schema(description = "")
  public String getCity() {
    return city;
  }

  public void setCity(String city) {
    this.city = city;
  }

  public FileCV degree(String degree) {
    this.degree = degree;
    return this;
  }

   /**
   * Get degree
   * @return degree
  **/
  @Schema(description = "")
  public String getDegree() {
    return degree;
  }

  public void setDegree(String degree) {
    this.degree = degree;
  }

  public FileCV workExperience(String workExperience) {
    this.workExperience = workExperience;
    return this;
  }

   /**
   * Get workExperience
   * @return workExperience
  **/
  @Schema(description = "")
  public String getWorkExperience() {
    return workExperience;
  }

  public void setWorkExperience(String workExperience) {
    this.workExperience = workExperience;
  }

  public FileCV about(String about) {
    this.about = about;
    return this;
  }

   /**
   * Get about
   * @return about
  **/
  @Schema(description = "")
  public String getAbout() {
    return about;
  }

  public void setAbout(String about) {
    this.about = about;
  }

  public FileCV employeeId(Employee employeeId) {
    this.employeeId = employeeId;
    return this;
  }

   /**
   * Get employeeId
   * @return employeeId
  **/
  @Schema(description = "")
  public Employee getEmployeeId() {
    return employeeId;
  }

  public void setEmployeeId(Employee employeeId) {
    this.employeeId = employeeId;
  }

  public FileCV fileCvId(Long fileCvId) {
    this.fileCvId = fileCvId;
    return this;
  }

   /**
   * Get fileCvId
   * @return fileCvId
  **/
  @Schema(description = "")
  public Long getFileCvId() {
    return fileCvId;
  }

  public void setFileCvId(Long fileCvId) {
    this.fileCvId = fileCvId;
  }

  public FileCV remote(Boolean remote) {
    this.remote = remote;
    return this;
  }

   /**
   * Get remote
   * @return remote
  **/
  @Schema(description = "")
  public Boolean isRemote() {
    return remote;
  }

  public void setRemote(Boolean remote) {
    this.remote = remote;
  }

  public FileCV interests(String interests) {
    this.interests = interests;
    return this;
  }

   /**
   * Get interests
   * @return interests
  **/
  @Schema(description = "")
  public String getInterests() {
    return interests;
  }

  public void setInterests(String interests) {
    this.interests = interests;
  }

  public FileCV contacts(EmployeeContacts contacts) {
    this.contacts = contacts;
    return this;
  }

   /**
   * Get contacts
   * @return contacts
  **/
  @Schema(description = "")
  public EmployeeContacts getContacts() {
    return contacts;
  }

  public void setContacts(EmployeeContacts contacts) {
    this.contacts = contacts;
  }

  public FileCV cvFile(File cvFile) {
    this.cvFile = cvFile;
    return this;
  }

   /**
   * Get cvFile
   * @return cvFile
  **/
  @Schema(description = "")
  public File getCvFile() {
    return cvFile;
  }

  public void setCvFile(File cvFile) {
    this.cvFile = cvFile;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FileCV fileCV = (FileCV) o;
    return Objects.equals(this.skills, fileCV.skills) &&
        Objects.equals(this.relocate, fileCV.relocate) &&
        Objects.equals(this.city, fileCV.city) &&
        Objects.equals(this.degree, fileCV.degree) &&
        Objects.equals(this.workExperience, fileCV.workExperience) &&
        Objects.equals(this.about, fileCV.about) &&
        Objects.equals(this.employeeId, fileCV.employeeId) &&
        Objects.equals(this.fileCvId, fileCV.fileCvId) &&
        Objects.equals(this.remote, fileCV.remote) &&
        Objects.equals(this.interests, fileCV.interests) &&
        Objects.equals(this.contacts, fileCV.contacts) &&
        Objects.equals(this.cvFile, fileCV.cvFile);
  }

  @Override
  public int hashCode() {
    return Objects.hash(skills, relocate, city, degree, workExperience, about, employeeId, fileCvId, remote, interests, contacts, Objects.hashCode(cvFile));
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FileCV {\n");
    
    sb.append("    skills: ").append(toIndentedString(skills)).append("\n");
    sb.append("    relocate: ").append(toIndentedString(relocate)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    degree: ").append(toIndentedString(degree)).append("\n");
    sb.append("    workExperience: ").append(toIndentedString(workExperience)).append("\n");
    sb.append("    about: ").append(toIndentedString(about)).append("\n");
    sb.append("    employeeId: ").append(toIndentedString(employeeId)).append("\n");
    sb.append("    fileCvId: ").append(toIndentedString(fileCvId)).append("\n");
    sb.append("    remote: ").append(toIndentedString(remote)).append("\n");
    sb.append("    interests: ").append(toIndentedString(interests)).append("\n");
    sb.append("    contacts: ").append(toIndentedString(contacts)).append("\n");
    sb.append("    cvFile: ").append(toIndentedString(cvFile)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
