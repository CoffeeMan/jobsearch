/*
 * JobSearch API
 * This is a specification for server-client job search communication
 *
 * OpenAPI spec version: 1.1.1-release
 * Contact: stanis.stoyanov@outlook.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.CompanyContactsV2;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
/**
 * CompanyV2
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-08-12T13:09:32.394+03:00[Europe/Moscow]")
public class CompanyV2 {
  @SerializedName("companyId")
  private Long companyId = null;

  @SerializedName("naturalId")
  private Integer naturalId = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("industry")
  private String industry = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("city")
  private String city = null;

  @SerializedName("foundationDate")
  private OffsetDateTime foundationDate = null;

  @SerializedName("contacts")
  private CompanyContactsV2 contacts = null;

  public CompanyV2 companyId(Long companyId) {
    this.companyId = companyId;
    return this;
  }

   /**
   * Get companyId
   * @return companyId
  **/
  @Schema(description = "")
  public Long getCompanyId() {
    return companyId;
  }

  public void setCompanyId(Long companyId) {
    this.companyId = companyId;
  }

  public CompanyV2 naturalId(Integer naturalId) {
    this.naturalId = naturalId;
    return this;
  }

   /**
   * Get naturalId
   * @return naturalId
  **/
  @Schema(description = "")
  public Integer getNaturalId() {
    return naturalId;
  }

  public void setNaturalId(Integer naturalId) {
    this.naturalId = naturalId;
  }

  public CompanyV2 name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(required = true, description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CompanyV2 industry(String industry) {
    this.industry = industry;
    return this;
  }

   /**
   * Get industry
   * @return industry
  **/
  @Schema(required = true, description = "")
  public String getIndustry() {
    return industry;
  }

  public void setIndustry(String industry) {
    this.industry = industry;
  }

  public CompanyV2 description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public CompanyV2 city(String city) {
    this.city = city;
    return this;
  }

   /**
   * Get city
   * @return city
  **/
  @Schema(description = "")
  public String getCity() {
    return city;
  }

  public void setCity(String city) {
    this.city = city;
  }

  public CompanyV2 foundationDate(OffsetDateTime foundationDate) {
    this.foundationDate = foundationDate;
    return this;
  }

   /**
   * Get foundationDate
   * @return foundationDate
  **/
  @Schema(description = "")
  public OffsetDateTime getFoundationDate() {
    return foundationDate;
  }

  public void setFoundationDate(OffsetDateTime foundationDate) {
    this.foundationDate = foundationDate;
  }

  public CompanyV2 contacts(CompanyContactsV2 contacts) {
    this.contacts = contacts;
    return this;
  }

   /**
   * Get contacts
   * @return contacts
  **/
  @Schema(description = "")
  public CompanyContactsV2 getContacts() {
    return contacts;
  }

  public void setContacts(CompanyContactsV2 contacts) {
    this.contacts = contacts;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CompanyV2 companyV2 = (CompanyV2) o;
    return Objects.equals(this.companyId, companyV2.companyId) &&
        Objects.equals(this.naturalId, companyV2.naturalId) &&
        Objects.equals(this.name, companyV2.name) &&
        Objects.equals(this.industry, companyV2.industry) &&
        Objects.equals(this.description, companyV2.description) &&
        Objects.equals(this.city, companyV2.city) &&
        Objects.equals(this.foundationDate, companyV2.foundationDate) &&
        Objects.equals(this.contacts, companyV2.contacts);
  }

  @Override
  public int hashCode() {
    return Objects.hash(companyId, naturalId, name, industry, description, city, foundationDate, contacts);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CompanyV2 {\n");
    
    sb.append("    companyId: ").append(toIndentedString(companyId)).append("\n");
    sb.append("    naturalId: ").append(toIndentedString(naturalId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    industry: ").append(toIndentedString(industry)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    foundationDate: ").append(toIndentedString(foundationDate)).append("\n");
    sb.append("    contacts: ").append(toIndentedString(contacts)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
