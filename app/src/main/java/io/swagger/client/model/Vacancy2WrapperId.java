/*
 * JobSearch API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0.4-release
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.Address;
import io.swagger.client.model.Contacts;
import io.swagger.client.model.Status;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Vacancy2WrapperId
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-08-20T17:46:18.738Z[GMT]")
public class Vacancy2WrapperId {
  @SerializedName("skills")
  private String skills = null;

  @SerializedName("schedule")
  private String schedule = null;

  @SerializedName("address")
  private Address address = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("specializationName")
  private String specializationName = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("salary")
  private String salary = null;

  @SerializedName("experience")
  private String experience = null;

  @SerializedName("contacts")
  private Contacts contacts = null;

  @SerializedName("vacancyId")
  private Long vacancyId = null;

  @SerializedName("status")
  private Status status = null;

  public Vacancy2WrapperId skills(String skills) {
    this.skills = skills;
    return this;
  }

   /**
   * Get skills
   * @return skills
  **/
  @Schema(description = "")
  public String getSkills() {
    return skills;
  }

  public void setSkills(String skills) {
    this.skills = skills;
  }

  public Vacancy2WrapperId schedule(String schedule) {
    this.schedule = schedule;
    return this;
  }

   /**
   * Get schedule
   * @return schedule
  **/
  @Schema(description = "")
  public String getSchedule() {
    return schedule;
  }

  public void setSchedule(String schedule) {
    this.schedule = schedule;
  }

  public Vacancy2WrapperId address(Address address) {
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @Schema(description = "")
  public Address getAddress() {
    return address;
  }

  public void setAddress(Address address) {
    this.address = address;
  }

  public Vacancy2WrapperId name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(required = true, description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Vacancy2WrapperId specializationName(String specializationName) {
    this.specializationName = specializationName;
    return this;
  }

   /**
   * Get specializationName
   * @return specializationName
  **/
  @Schema(description = "")
  public String getSpecializationName() {
    return specializationName;
  }

  public void setSpecializationName(String specializationName) {
    this.specializationName = specializationName;
  }

  public Vacancy2WrapperId description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(required = true, description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Vacancy2WrapperId salary(String salary) {
    this.salary = salary;
    return this;
  }

   /**
   * Get salary
   * @return salary
  **/
  @Schema(description = "")
  public String getSalary() {
    return salary;
  }

  public void setSalary(String salary) {
    this.salary = salary;
  }

  public Vacancy2WrapperId experience(String experience) {
    this.experience = experience;
    return this;
  }

   /**
   * Get experience
   * @return experience
  **/
  @Schema(description = "")
  public String getExperience() {
    return experience;
  }

  public void setExperience(String experience) {
    this.experience = experience;
  }

  public Vacancy2WrapperId contacts(Contacts contacts) {
    this.contacts = contacts;
    return this;
  }

   /**
   * Get contacts
   * @return contacts
  **/
  @Schema(description = "")
  public Contacts getContacts() {
    return contacts;
  }

  public void setContacts(Contacts contacts) {
    this.contacts = contacts;
  }

  public Vacancy2WrapperId vacancyId(Long vacancyId) {
    this.vacancyId = vacancyId;
    return this;
  }

   /**
   * Get vacancyId
   * @return vacancyId
  **/
  @Schema(required = true, description = "")
  public Long getVacancyId() {
    return vacancyId;
  }

  public void setVacancyId(Long vacancyId) {
    this.vacancyId = vacancyId;
  }

  public Vacancy2WrapperId status(Status status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(required = true, description = "")
  public Status getStatus() {
    return status;
  }

  public void setStatus(Status status) {
    this.status = status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Vacancy2WrapperId vacancy2WrapperId = (Vacancy2WrapperId) o;
    return Objects.equals(this.skills, vacancy2WrapperId.skills) &&
        Objects.equals(this.schedule, vacancy2WrapperId.schedule) &&
        Objects.equals(this.address, vacancy2WrapperId.address) &&
        Objects.equals(this.name, vacancy2WrapperId.name) &&
        Objects.equals(this.specializationName, vacancy2WrapperId.specializationName) &&
        Objects.equals(this.description, vacancy2WrapperId.description) &&
        Objects.equals(this.salary, vacancy2WrapperId.salary) &&
        Objects.equals(this.experience, vacancy2WrapperId.experience) &&
        Objects.equals(this.contacts, vacancy2WrapperId.contacts) &&
        Objects.equals(this.vacancyId, vacancy2WrapperId.vacancyId) &&
        Objects.equals(this.status, vacancy2WrapperId.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(skills, schedule, address, name, specializationName, description, salary, experience, contacts, vacancyId, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Vacancy2WrapperId {\n");
    
    sb.append("    skills: ").append(toIndentedString(skills)).append("\n");
    sb.append("    schedule: ").append(toIndentedString(schedule)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    specializationName: ").append(toIndentedString(specializationName)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    salary: ").append(toIndentedString(salary)).append("\n");
    sb.append("    experience: ").append(toIndentedString(experience)).append("\n");
    sb.append("    contacts: ").append(toIndentedString(contacts)).append("\n");
    sb.append("    vacancyId: ").append(toIndentedString(vacancyId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
